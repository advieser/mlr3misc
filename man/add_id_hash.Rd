% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_id_hash.R
\name{add_id_hash}
\alias{add_id_hash}
\title{Add slots for id and hash to an R6 class generator}
\usage{
add_id_hash(generator)
}
\arguments{
\item{generator}{(\code{R6ClassGenerator}).
\pkg{R6} Class Generator.}
}
\value{
(\code{R6ClassGenerator}) with added active bindings and private fields.
}
\description{
Takes an \pkg{R6} class generator (created with \link[R6:R6Class]{R6::R6Class})
and adds two active bindings (\code{id} and \code{hash}),  two
private fields (\code{.id} and \code{.hash}) and a private method (\code{.calculate_hash()}).

If \code{obj$id} is called, the value of \code{private$.id} (\code{character(1)}) is returned.
If the id is set via assignment, \code{private$.hash} is invalidated by setting it to \code{NA_character_}.

If \code{obj$hash} is called, the value of \code{private$.hash} (\code{character(1)}) is returned.
If the hash is \code{NA_character_}, the private method \code{private$.calculate_hash()} is called first
to (re-) calculate the hash. The calculated value is stored in \code{private$.hash}.
It is possible to manually set the hash via assignment.

The private method \code{private$.calculate_hash()} is only created if not already
defined for the class generator. The default method creates random hashes
via \code{\link[base:tempfile]{base::tempfile()}}.
}
