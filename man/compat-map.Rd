% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map.R
\name{compat-map}
\alias{compat-map}
\alias{map}
\alias{map_lgl}
\alias{map_int}
\alias{map_dbl}
\alias{map_chr}
\alias{map_dtr}
\alias{map_dtc}
\title{Purrr-like map}
\usage{
map(.x, .f, ...)

map_lgl(.x, .f, ...)

map_int(.x, .f, ...)

map_dbl(.x, .f, ...)

map_chr(.x, .f, ...)

map_dtr(.x, .f, ..., .fill = FALSE)

map_dtc(.x, .f, ...)
}
\arguments{
\item{.x}{[\code{list()} or atomic \code{vector}].}

\item{.f}{[\code{function}\ | \code{character} | \code{integer}].}

\item{...}{[any]:\cr
Additional arguments passed to \code{.f}.}

\item{.fill}{[\code{logical(1)}]:\cr
Passed down to \code{\link[data.table:rbindlist]{data.table::rbindlist()}}.}
}
\description{
A \code{map}-operation, similar to the one implemented in \pkg{purrr}.

\code{map} returns the results of \code{.f} applied to \code{.x} as list.
If \code{.f} is not a function, \code{map} will call \code{[[} on all elements of \code{.x} using
the value of \code{.f} as index.

The other \code{map} variants ensure type safety:
\itemize{
\item \code{map_lgl} returns a \code{logical(length(.x))}.
\item \code{map_int} returns a \code{integer(length(.x))}.
\item \code{map_dbl} returns a \code{double(length(.x))}.
\item \code{map_chr} returns a \code{character(length(.x))}.
\item \code{map_dtr} returns a \code{\link[data.table:data.table]{data.table::data.table()}} where the results of \code{.f} are put together in an \code{\link[base:rbind]{base::rbind()}} fashion.
\item \code{map_dtc} returns a \code{\link[data.table:data.table]{data.table::data.table()}} where the results of \code{.f} are put together in an \code{\link[base:cbind]{base::cbind()}} fashion.
}
}
